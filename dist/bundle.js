/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar newTodo = document.getElementById('newtodo');\nvar ul = document.getElementById(\"myUL\");\nvar footer = document.getElementById('myFOOTER');\nvar completeAll = document.getElementById('completeAll');\nvar todoCount = document.getElementById('todoCount');\nvar liList = document.getElementsByTagName('li');\nvar completed = document.getElementsByClassName('completed');\nvar buttonAll = document.getElementById('buttonAll');\nvar buttonActive = document.getElementById('buttonActive');\nvar buttonCompleted = document.getElementById('buttonCompleted');\nvar buttonDeleteCompleted = document.getElementById(\"deleteCompleted\");\nbuttonAll.onclick = function () {\n  var _iterator = _createForOfIteratorHelper(liList),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var li = _step.value;\n      li.style.display = 'block';\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\nbuttonActive.onclick = function () {\n  var _iterator2 = _createForOfIteratorHelper(liList),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var li = _step2.value;\n      if (li.className == 'completed') {\n        li.style.display = 'none';\n      } else {\n        li.style.display = 'block';\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n};\nbuttonCompleted.onclick = function () {\n  var _iterator3 = _createForOfIteratorHelper(liList),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var li = _step3.value;\n      if (li.className == 'completed') {\n        li.style.display = 'block';\n      } else {\n        li.style.display = 'none';\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n};\nbuttonDeleteCompleted.onclick = function () {\n  if (completed) {\n    while (completed.length) {\n      var li = completed[0];\n      ul.removeChild(li);\n    }\n    checkEmptyList();\n    countTasks();\n  }\n};\nnewTodo.addEventListener('keydown', function (event) {\n  if (event.key == \"Enter\") {\n    addTask();\n    checkEmptyList();\n    countTasks();\n  }\n});\nfunction countTasks() {\n  var list = document.getElementsByTagName('li');\n  var completed = document.getElementsByClassName('completed');\n  todoCount.textContent = list.length - completed.length + \" items left\";\n}\ncompleteAll.onclick = function () {\n  var list = document.getElementsByTagName('li');\n  var completed = document.getElementsByClassName('completed');\n  var isFullList = list.length == completed.length;\n  var _iterator4 = _createForOfIteratorHelper(list),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var li = _step4.value;\n      if (!_toConsumableArray(completed).includes(li)) {\n        li.classList.add('completed');\n        li.childNodes[1].classList.add('checked');\n        countTasks();\n      }\n      if (isFullList) {\n        li.classList.remove('completed');\n        li.childNodes[1].classList.remove('checked');\n        countTasks();\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n};\nfunction checkEmptyList() {\n  footer.style.display = document.getElementsByTagName('LI').length == 0 ? \"none\" : \"table\";\n}\nvar close = document.getElementsByClassName(\"close\");\nfunction addTask() {\n  var li = document.createElement(\"li\");\n  var inputValue = document.getElementById(\"newtodo\").value;\n  var text = document.createTextNode(inputValue);\n  li.appendChild(text);\n  if (inputValue !== '') {\n    document.getElementById(\"myUL\").appendChild(li);\n    document.getElementById(\"newtodo\").value = \"\";\n    var span = document.createElement(\"span\");\n    var txt = document.createTextNode(\"\\xD7\");\n    span.className = \"close\";\n    span.appendChild(txt);\n    var select = document.createElement(\"span\");\n    select.className = \"select\";\n    li.appendChild(select);\n    li.appendChild(span);\n    for (var i = 0; i < close.length; i++) {\n      close[i].onclick = function () {\n        var div = this.parentElement;\n        ul.removeChild(div);\n        checkEmptyList();\n        countTasks();\n      };\n    }\n  }\n}\nvar list = document.querySelector('ul');\nlist.addEventListener('click', function (ev) {\n  if (ev.target.tagName === 'SPAN') {\n    ev.target.classList.toggle('checked');\n    var li = ev.target.parentElement;\n    li.classList.toggle('completed');\n    countTasks();\n  }\n}, false);\n\n//# sourceURL=webpack://simpletodo/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;